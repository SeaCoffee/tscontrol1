{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\IdeaProjects\\\\tscontrol\\\\src\\\\components\\\\MoviesListComponent\\\\MoviesListComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { moviesService, genresService } from \"../../services/axiosService\";\nimport { MoviesListCard } from \"../MovieListCardComponent/MovieListCardComponent\";\nimport { usePageQuery } from \"../../services/pagination\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesListComponent = ({\n  selectedGenre,\n  searchTerm\n}) => {\n  _s();\n  const {\n    page: queryPage,\n    prevPage,\n    nextPage\n  } = usePageQuery();\n  const page = queryPage ? parseInt(queryPage, 10) : 1;\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [genres, setGenres] = useState({});\n  const {\n    theme\n  } = useTheme();\n  const moviesListStyle = {\n    backgroundColor: theme === 'light' ? 'white' : 'black',\n    color: theme === 'light' ? 'black' : 'white'\n  };\n  useEffect(() => {\n    moviesService.getAll(page).then(({\n      data\n    }) => {\n      setMovies(data.results);\n      setFilteredMovies(data.results);\n    });\n    genresService.getAll().then(({\n      data\n    }) => {\n      if (data && data.genres) {\n        const genresDict = data.genres.reduce((acc, genre) => {\n          acc[genre.id] = genre.name;\n          return acc;\n        }, {});\n        setGenres(genresDict);\n      }\n    });\n  }, [page]);\n  useEffect(() => {\n    let filtered = movies;\n    if (selectedGenre) {\n      filtered = filtered.filter(movie => movie.genre_ids.includes(selectedGenre));\n    }\n    if (searchTerm) {\n      filtered = filtered.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    setFilteredMovies(filtered);\n  }, [selectedGenre, searchTerm, movies]);\n  const movieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: moviesListStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n      },\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(MoviesListCard, {\n        movie: movie,\n        movieClick: movieClick,\n        genreDictionary: genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        children: \"Previous page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Current page \", page]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesListComponent, \"LZU9ZcHNiQ9vGFndOlqBhcbNKjA=\", false, function () {\n  return [usePageQuery, useNavigate, useTheme];\n});\n_c = MoviesListComponent;\nvar _c;\n$RefreshReg$(_c, \"MoviesListComponent\");","map":{"version":3,"names":["useEffect","useState","useNavigate","moviesService","genresService","MoviesListCard","usePageQuery","useTheme","jsxDEV","_jsxDEV","MoviesListComponent","selectedGenre","searchTerm","_s","page","queryPage","prevPage","nextPage","parseInt","navigate","movies","setMovies","filteredMovies","setFilteredMovies","genres","setGenres","theme","moviesListStyle","backgroundColor","color","getAll","then","data","results","genresDict","reduce","acc","genre","id","name","filtered","filter","movie","genre_ids","includes","title","toLowerCase","movieClick","movieId","style","children","display","flexWrap","justifyContent","map","genreDictionary","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/IdeaProjects/tscontrol/src/components/MoviesListComponent/MoviesListComponent.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport {moviesService, genresService } from \"../../services/axiosService\";\r\nimport {MoviesListCard} from \"../MovieListCardComponent/MovieListCardComponent\";\r\nimport {usePageQuery} from \"../../services/pagination\";\r\nimport {GenreDictionary} from \"../GenreListComponent/GenreListComponent\";\r\nimport {Movie, Genre} from \"../../services/axiosService\";\r\nimport {useTheme} from \"../context/ThemeContext\";\r\n\r\n\r\ninterface MoviesListComponentProps {\r\n    selectedGenre?: number | null;\r\n    searchTerm?: string;\r\n}\r\n\r\n\r\nexport const MoviesListComponent: React.FC<MoviesListComponentProps> = ({ selectedGenre, searchTerm }) => {\r\n    const { page: queryPage, prevPage, nextPage } = usePageQuery();\r\n    const page = queryPage ? parseInt(queryPage, 10) : 1;\r\n    const navigate = useNavigate();\r\n    const [movies, setMovies] = useState<Movie[]>([]);\r\n    const [filteredMovies, setFilteredMovies] = useState<Movie[]>([]);\r\n    const [genres, setGenres] = useState<GenreDictionary>({} as GenreDictionary);\r\n    const { theme } = useTheme();\r\n\r\n    const moviesListStyle = {\r\n        backgroundColor: theme === 'light' ? 'white' : 'black',\r\n        color: theme === 'light' ? 'black' : 'white',\r\n    };\r\n\r\n    useEffect(() => {\r\n        moviesService.getAll(page).then(({ data }) => {\r\n            setMovies(data.results);\r\n            setFilteredMovies(data.results);\r\n        });\r\n\r\n        genresService.getAll().then(({ data }) => {\r\n            if (data && data.genres) {\r\n                const genresDict = data.genres.reduce((acc: GenreDictionary, genre: Genre) => {\r\n                    acc[genre.id] = genre.name;\r\n                    return acc;\r\n                }, {} as GenreDictionary);\r\n                setGenres(genresDict);\r\n            }\r\n        });\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        let filtered = movies;\r\n\r\n        if (selectedGenre) {\r\n            filtered = filtered.filter(movie => movie.genre_ids.includes(selectedGenre));\r\n        }\r\n\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        }\r\n\r\n        setFilteredMovies(filtered);\r\n    }, [selectedGenre, searchTerm, movies]);\r\n\r\n    const movieClick = (movieId: number) => {\r\n        navigate(`/movies/${movieId}`);\r\n    };\r\n\r\n    return (\r\n        <div style={moviesListStyle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                {filteredMovies.map((movie) => (\r\n                    <MoviesListCard\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                        movieClick={movieClick}\r\n                        genreDictionary={genres}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <button onClick={prevPage}>Previous page</button>\r\n                <span>Current page {page}</span>\r\n                <button onClick={nextPage}>Next page</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}