{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\IdeaProjects\\\\tscontrol\\\\src\\\\components\\\\HeaderComponent\\\\HeaderComponent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { UserInfo } from \"../UserInfoComponent/UserInfoComponent\";\nimport { ThemeSwitcher } from \"../ThemeSwitcherComponent/ThemeSwitcherComponent\";\nimport { GenreSelector } from \"../GenresSelectorComponent/GenresSelectorComponent\";\nimport { SearchBar } from \"../SearchBarComponent/SearchBarComponent\";\nimport { genresService } from \"../../services/axiosService\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = ({\n  onSearch,\n  onGenreSelect\n}) => {\n  _s();\n  console.log('Rendering Header');\n  const [genres, setGenres] = useState([]);\n  const {\n    theme\n  } = useTheme();\n  const headerStyle = {\n    backgroundColor: theme === 'light' ? 'white' : 'black',\n    color: theme === 'light' ? 'black' : 'white'\n  };\n  useEffect(() => {\n    genresService.getAll().then(({\n      data\n    }) => {\n      setGenres(data.genres);\n    }).catch(error => {\n      console.error('Error loading genres:', error);\n    });\n  }, []);\n  console.log('Rendering Header with onGenreSelect:', onGenreSelect);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    style: headerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GenreSelector, {\n      genres: genres,\n      onGenreSelect: onGenreSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ThemeSwitcher, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"ay94uCvlNuIYyBsR2mtBfGdfoJM=\", false, function () {\n  return [useTheme];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","UserInfo","ThemeSwitcher","GenreSelector","SearchBar","genresService","useTheme","jsxDEV","_jsxDEV","Header","onSearch","onGenreSelect","_s","console","log","genres","setGenres","theme","headerStyle","backgroundColor","color","getAll","then","data","catch","error","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/IdeaProjects/tscontrol/src/components/HeaderComponent/HeaderComponent.tsx"],"sourcesContent":["import React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport {UserInfo} from \"../UserInfoComponent/UserInfoComponent\";\r\nimport {ThemeSwitcher} from \"../ThemeSwitcherComponent/ThemeSwitcherComponent\";\r\nimport {GenreSelector} from \"../GenresSelectorComponent/GenresSelectorComponent\";\r\nimport {SearchBar} from \"../SearchBarComponent/SearchBarComponent\";\r\nimport {genresService} from \"../../services/axiosService\";\r\nimport {useTheme} from \"../context/ThemeContext\";\r\n\r\n\r\n\r\n\r\nimport {Genre} from \"../../services/axiosService\";\r\n\r\ninterface HeaderProps {\r\n    onSearch: (searchQuery: string) => void;\r\n    onGenreSelect: (genreId: number) => void;\r\n}\r\n\r\nexport const Header: React.FC<HeaderProps> = ({ onSearch, onGenreSelect }) => {\r\n    console.log('Rendering Header');\r\n\r\n    const [genres, setGenres] = useState<Genre[]>([]);\r\n    const { theme } = useTheme();\r\n\r\n    const headerStyle = {\r\n        backgroundColor: theme === 'light' ? 'white' : 'black',\r\n        color: theme === 'light' ? 'black' : 'white',\r\n    };\r\n\r\n    useEffect(() => {\r\n        genresService.getAll().then(({ data }) => {\r\n            setGenres(data.genres);\r\n        }).catch(error => {\r\n            console.error('Error loading genres:', error);\r\n        });\r\n    }, []);\r\n    console.log('Rendering Header with onGenreSelect:', onGenreSelect);\r\n\r\n\r\n    return (\r\n        <header className=\"header\" style={headerStyle}>\r\n        <h1>MovieDB</h1>\r\n        <SearchBar onSearch={onSearch} />\r\n    <GenreSelector genres={genres} onGenreSelect={onGenreSelect} />\r\n    <div>\r\n    <UserInfo />\r\n    <ThemeSwitcher />\r\n    </div>\r\n    </header>\r\n);\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAGzC,SAAQC,QAAQ,QAAO,wCAAwC;AAC/D,SAAQC,aAAa,QAAO,kDAAkD;AAC9E,SAAQC,aAAa,QAAO,oDAAoD;AAChF,SAAQC,SAAS,QAAO,0CAA0C;AAClE,SAAQC,aAAa,QAAO,6BAA6B;AACzD,SAAQC,QAAQ,QAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYjD,OAAO,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1EC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM;IAAEiB;EAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAE5B,MAAMY,WAAW,GAAG;IAChBC,eAAe,EAAEF,KAAK,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO;IACtDG,KAAK,EAAEH,KAAK,KAAK,OAAO,GAAG,OAAO,GAAG;EACzC,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZM,aAAa,CAACgB,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACtCP,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC;IAC1B,CAAC,CAAC,CAACS,KAAK,CAACC,KAAK,IAAI;MACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNZ,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEH,aAAa,CAAC;EAGlE,oBACIH,OAAA;IAAQkB,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAET,WAAY;IAAAU,QAAA,gBAC9CpB,OAAA;MAAAoB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBxB,OAAA,CAACJ,SAAS;MAACM,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCxB,OAAA,CAACL,aAAa;MAACY,MAAM,EAAEA,MAAO;MAACJ,aAAa,EAAEA;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DxB,OAAA;MAAAoB,QAAA,gBACApB,OAAA,CAACP,QAAQ;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZxB,OAAA,CAACN,aAAa;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb,CAAC;AAACpB,EAAA,CAhCWH,MAA6B;EAAA,QAIpBH,QAAQ;AAAA;AAAA2B,EAAA,GAJjBxB,MAA6B;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}