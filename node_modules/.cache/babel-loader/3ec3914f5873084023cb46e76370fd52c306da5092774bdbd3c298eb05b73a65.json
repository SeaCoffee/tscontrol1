{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\IdeaProjects\\\\tscontrol\\\\src\\\\components\\\\GenresSelectorComponent\\\\GenresSelectorComponent.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GenreSelector = ({\n  genres,\n  onGenreSelect\n}) => {\n  console.log('Rendering GenreSelector with genres:', genres);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"genre-list\",\n      children: genres.map(genre => {\n        console.log(`Rendering genre: ${genre.name}`);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            console.log(`Genre clicked: ${genre.id}`);\n            onGenreSelect(genre.id);\n          },\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = GenreSelector;\nvar _c;\n$RefreshReg$(_c, \"GenreSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GenreSelector","genres","onGenreSelect","console","log","children","className","map","genre","name","style","cursor","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/IdeaProjects/tscontrol/src/components/GenresSelectorComponent/GenresSelectorComponent.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport {Genre} from \"../../services/axiosService\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\ninterface GenreSelectorProps {\r\n    genres: Genre[];\r\n    onGenreSelect: (genreId: number) => void;\r\n}\r\n\r\nexport const GenreSelector: React.FC<GenreSelectorProps> = ({ genres, onGenreSelect }) => {\r\n    console.log('Rendering GenreSelector with genres:', genres);\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"genre-list\">\r\n                {genres.map(genre => {\r\n                    console.log(`Rendering genre: ${genre.name}`);\r\n                    return (\r\n                        <li key={genre.id} style={{ cursor: 'pointer' }} onClick={() => { console.log(`Genre clicked: ${genre.id}`); onGenreSelect(genre.id); }}>\r\n                            {genre.name}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,OAAO,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EACtFC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEH,MAAM,CAAC;EAE3D,oBACIF,OAAA;IAAAM,QAAA,eACIN,OAAA;MAAIO,SAAS,EAAC,YAAY;MAAAD,QAAA,EACrBJ,MAAM,CAACM,GAAG,CAACC,KAAK,IAAI;QACjBL,OAAO,CAACC,GAAG,CAAE,oBAAmBI,KAAK,CAACC,IAAK,EAAC,CAAC;QAC7C,oBACIV,OAAA;UAAmBW,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAU,CAAE;UAACC,OAAO,EAAEA,CAAA,KAAM;YAAET,OAAO,CAACC,GAAG,CAAE,kBAAiBI,KAAK,CAACK,EAAG,EAAC,CAAC;YAAEX,aAAa,CAACM,KAAK,CAACK,EAAE,CAAC;UAAE,CAAE;UAAAR,QAAA,EACnIG,KAAK,CAACC;QAAI,GADND,KAAK,CAACK,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACC,EAAA,GAjBWlB,aAA2C;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}