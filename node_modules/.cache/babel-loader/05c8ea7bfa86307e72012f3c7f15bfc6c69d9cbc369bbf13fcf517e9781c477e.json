{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\IdeaProjects\\\\tscontrol\\\\src\\\\pages\\\\MoviesListGenrePage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MovieGenre } from \"../components/GenresComponent/GenresComponent\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesListGenrePage = () => {\n  _s();\n  const {\n    genreId\n  } = useParams();\n  if (!genreId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Genre ID is not specified or is not valid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  const genreIdNumber = parseInt(genreId, 10);\n  if (isNaN(genreIdNumber)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Genre ID is not a valid number.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  console.log('Genre ID:', genreIdNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MovieGenre, {\n      genreId: genreIdNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesListGenrePage, \"VGm2AhbZLF9FjKitOR3UAHw2Hr4=\", false, function () {\n  return [useParams];\n});\n_c = MoviesListGenrePage;\nexport default MoviesListGenrePage;\nvar _c;\n$RefreshReg$(_c, \"MoviesListGenrePage\");","map":{"version":3,"names":["React","MovieGenre","useParams","jsxDEV","_jsxDEV","MoviesListGenrePage","_s","genreId","children","fileName","_jsxFileName","lineNumber","columnNumber","genreIdNumber","parseInt","isNaN","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Dell/IdeaProjects/tscontrol/src/pages/MoviesListGenrePage.tsx"],"sourcesContent":["import React from 'react';\r\nimport {MovieGenre} from \"../components/GenresComponent/GenresComponent\";\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MoviesListGenrePage: React.FC = () => {\r\n    const { genreId } = useParams<{ genreId: string }>();\r\n\r\n\r\n    if (!genreId) {\r\n        return <div>Genre ID is not specified or is not valid.</div>;\r\n    }\r\n\r\n    const genreIdNumber = parseInt(genreId, 10);\r\n    if (isNaN(genreIdNumber)) {\r\n        return <div>Genre ID is not a valid number.</div>;\r\n    }\r\n    console.log('Genre ID:', genreIdNumber);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MovieGenre genreId={genreIdNumber} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesListGenrePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,+CAA+C;AAExE,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,mBAA6B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAsB,CAAC;EAGpD,IAAI,CAACK,OAAO,EAAE;IACV,oBAAOH,OAAA;MAAAI,QAAA,EAAK;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChE;EAEA,MAAMC,aAAa,GAAGC,QAAQ,CAACP,OAAO,EAAE,EAAE,CAAC;EAC3C,IAAIQ,KAAK,CAACF,aAAa,CAAC,EAAE;IACtB,oBAAOT,OAAA;MAAAI,QAAA,EAAK;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrD;EACAI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,aAAa,CAAC;EAGvC,oBACIT,OAAA;IAAAI,QAAA,eACIJ,OAAA,CAACH,UAAU;MAACM,OAAO,EAAEM;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACN,EAAA,CApBID,mBAA6B;EAAA,QACXH,SAAS;AAAA;AAAAgB,EAAA,GAD3Bb,mBAA6B;AAsBnC,eAAeA,mBAAmB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}