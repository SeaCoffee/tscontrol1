{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\IdeaProjects\\\\tscontrol\\\\src\\\\components\\\\SearchResultComponent\\\\SerachResultComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchService, genresService } from \"../../services/axiosService\";\nimport { SearchResultsPage } from \"../../pages/SearchResultPage\";\nimport { usePageQuery } from \"../../services/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchResultsComponent = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const searchTerm = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [genreDictionary, setGenreDictionary] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    page,\n    prevPage,\n    nextPage\n  } = usePageQuery();\n  useEffect(() => {\n    if (searchTerm) {\n      setIsLoading(true);\n      const pageNumber = Number(page) || 1;\n      Promise.all([searchService.getAll(searchTerm, pageNumber), genresService.getAll()]).then(([searchResults, genreResults]) => {\n        setMovies(searchResults.data.results);\n        if (genreResults.data && genreResults.data.genres) {\n          const dictionary = genreResults.data.genres.reduce((acc, genre) => {\n            acc[genre.id] = genre.name;\n            return acc;\n          }, {});\n          setGenreDictionary(dictionary);\n        }\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [searchTerm, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchResultsPage, {\n      searchTerm: searchTerm !== null && searchTerm !== void 0 ? searchTerm : '',\n      movies: movies,\n      genreDictionary: genreDictionary,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResultsComponent, \"MvnNBaIrZ+uDZZ/PcfmzGzMQMUc=\", false, function () {\n  return [useSearchParams, usePageQuery];\n});\n_c = SearchResultsComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchResultsComponent\");","map":{"version":3,"names":["useEffect","useState","useSearchParams","searchService","genresService","SearchResultsPage","usePageQuery","jsxDEV","_jsxDEV","SearchResultsComponent","_s","searchParams","searchTerm","get","movies","setMovies","genreDictionary","setGenreDictionary","isLoading","setIsLoading","page","prevPage","nextPage","pageNumber","Number","Promise","all","getAll","then","searchResults","genreResults","data","results","genres","dictionary","reduce","acc","genre","id","name","finally","style","display","flexWrap","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/IdeaProjects/tscontrol/src/components/SearchResultComponent/SerachResultComponent.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\n\r\nimport {searchService, genresService} from \"../../services/axiosService\";\r\nimport {SearchResultsPage} from \"../../pages/SearchResultPage\";\r\nimport {usePageQuery} from \"../../services/pagination\";\r\nimport {Movie} from \"../../services/axiosService\";\r\nimport {Genre} from \"../../services/axiosService\";\r\n\r\ntype GenreDictionary = { [id: number]: string };\r\n\r\nexport const SearchResultsComponent: React.FC = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const searchTerm = searchParams.get('query');\r\n    const [movies, setMovies] = useState<Movie[]>([]);\r\n    const [genreDictionary, setGenreDictionary] = useState<GenreDictionary>({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { page, prevPage, nextPage } = usePageQuery();\r\n\r\n    useEffect(() => {\r\n        if (searchTerm) {\r\n            setIsLoading(true);\r\n            const pageNumber = Number(page) || 1;\r\n            Promise.all([\r\n                searchService.getAll(searchTerm, pageNumber),\r\n                genresService.getAll()\r\n            ]).then(([searchResults, genreResults]) => {\r\n                setMovies(searchResults.data.results);\r\n\r\n                if (genreResults.data && genreResults.data.genres) {\r\n                    const dictionary = genreResults.data.genres.reduce((acc, genre) => {\r\n                        acc[genre.id] = genre.name;\r\n                        return acc;\r\n                    }, {} as GenreDictionary);\r\n                    setGenreDictionary(dictionary);\r\n                }\r\n            }).finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }, [searchTerm, page]);\r\n\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between'}}>\r\n            <SearchResultsPage  searchTerm={searchTerm ?? ''} movies={movies} genreDictionary={genreDictionary}\r\n                                isLoading={isLoading}/>\r\n            <div/>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}